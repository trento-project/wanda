name: OBS container

on:
  push:
    branches: [main]
    paths:
      - packaging/suse/*
      - .github/workflows/obs-container.yaml
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  obs-commit-container-image:
    name: Commit the container image on OBS
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/trento-project/continuous-delivery:main
      env:
        GITHUB_OAUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEST_FOLDER: "/tmp/osc_project"
        NAME: trento-wanda-image
        OBS_USER: ${{ secrets.OBS_USER }}
        OBS_PASS: ${{ secrets.OBS_PASS }}
        OBS_PROJECT: ${{ vars.OBS_PROJECT }}
        FOLDER: packaging/suse/container
        REPOSITORY: ${{ github.repository }}
      options: -u 0:0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: latest-tag
        with:
          semver_only: true
          initial_version: 0.0.1
      - name: Configure OSC
        # OSC credentials must be configured beforehand as the HOME variables cannot be changed from /github/home
        # that is used to run osc commands
        run: |
          mkdir -p $HOME/.config/osc
          cp /home/osc/.config/osc/oscrc $HOME/.config/osc
          /scripts/init_osc_creds.sh
      - name: Prepare .changes file
        # The .changes file is updated only in release creation. This current task should be improved
        # in order to add the current rolling release notes
        if: github.event_name == 'release'
        run: |
          CHANGES_FILE=$NAME.changes
          osc checkout $OBS_PROJECT $NAME $CHANGES_FILE
          mv $CHANGES_FILE $FOLDER
          VERSION=${{ steps.latest-tag.outputs.tag }}
          hack/gh_release_to_obs_changeset.py $REPOSITORY -a shap-staff@suse.de -t $VERSION -f $FOLDER/$CHANGES_FILE
      - name: Set version
        run: |
          VERSION=$(./hack/get_version_from_git.sh)
          # "+" character is not allowed in OBS dockerfile version strings
          VERSION=${VERSION//[+]/-}
          sed -i 's~%%VERSION%%~'"${VERSION}"'~' $FOLDER/Dockerfile
      - name: Commit on OBS
        run: |
          OBS_PACKAGE=$OBS_PROJECT/$NAME
          osc checkout $OBS_PACKAGE -o $DEST_FOLDER
          cp -r $FOLDER/* $DEST_FOLDER
          cd $DEST_FOLDER
          osc ar
          osc commit -m "New development version of $NAME released"
