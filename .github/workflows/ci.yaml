name: Continous Integration

on:
  push:
    branches:
      - main
    paths-ignore:
      - "VERSION"
      - "CHANGELOG.md"
  pull_request:
    paths-ignore:
      - "VERSION"
  workflow_dispatch:
  workflow_call:
  repository_dispatch:
    types: [start-ci]

env:
  MIX_ENV: test

jobs:
  elixir-deps:
    name: Elixir dependencies
    uses: ./.github/workflows/deps.yaml

  static-code-analysis:
    name: Static Code Analysis
    needs: elixir-deps
    runs-on: ubuntu-24.04
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup
        id: setup-elixir
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict
      - name: Read .tool-versions
        uses: endorama/asdf-parse-tool-versions@v1
        id: tool-versions
      - name: Retrieve Elixir Cached Dependencies
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: |
            deps
            _build/test
            priv/plts
          key: erlang-${{ steps.setup-elixir.outputs.otp-version }}-elixir-${{ steps.setup-elixir.outputs.elixir-version }}-rust-${{ env.RUST_VERSION }}-${{ hashFiles('mix.lock') }}
      - name: Check for Unused Dependencies
        run: mix deps.unlock --check-unused
      - name: Check Code Format
        run: mix format --check-formatted
      - name: Run Credo
        run: mix credo --strict
      - name: Run Dialyzer
        run: mix dialyzer

  test:
    name: Test
    needs: elixir-deps
    runs-on: ubuntu-24.04
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wanda_test
        ports:
          - 5434:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      rabbitmq:
        image: rabbitmq
        env:
          RABBITMQ_DEFAULT_USER: wanda
          RABBITMQ_DEFAULT_PASS: wanda
        ports:
          - 5674:5672
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup
        id: setup-elixir
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict
      - name: Read .tool-versions
        uses: endorama/asdf-parse-tool-versions@v1
        id: tool-versions
      - name: Retrieve Cached Dependencies
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: |
            deps
            _build/test
            priv/plts
          key: erlang-${{ steps.setup-elixir.outputs.otp-version }}-elixir-${{ steps.setup-elixir.outputs.elixir-version }}-rust-${{ env.RUST_VERSION }}-${{ hashFiles('mix.lock') }}
      - name: Compile
        run: mix compile --warnings-as-errors
      - name: Run test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mix coveralls.github --warnings-as-errors --color --trace

  main-branch-deps:
    name: main branch dependencies
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/deps.yaml
    with:
      checkout_ref: main

  api-bc-check:
    name: API bc check
    needs: [elixir-deps, main-branch-deps]
    if: github.event_name == 'pull_request' && !failure() && !cancelled()
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - version: V1
          - version: V2
          - version: V3
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout current branch
        uses: actions/checkout@v4
      - name: Set up Elixir
        id: setup-elixir
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict
      - name: Read .tool-versions
        uses: endorama/asdf-parse-tool-versions@v1
        id: tool-versions
      - name: Retrieve Cached Dependencies - current branch
        uses: actions/cache@v4
        id: mix-cache-current
        with:
          path: |
            deps
            _build/test
            priv/plts
          key: erlang-${{ steps.setup-elixir.outputs.otp-version }}-elixir-${{ steps.setup-elixir.outputs.elixir-version }}-rust-${{ env.RUST_VERSION }}-${{ hashFiles('mix.lock') }}
      - name: Generate current openapi.json
        run: |
          mix openapi.spec.json --start-app=false --spec WandaWeb.Schemas.${{ matrix.version }}.ApiSpec /tmp/specs/current-spec.json

      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Retrieve Cached Dependencies - main branch
        uses: actions/cache@v4
        id: mix-cache-main
        with:
          path: |
            deps
            _build/test
            priv/plts
          key: erlang-${{ steps.setup-elixir.outputs.otp-version }}-elixir-${{ steps.setup-elixir.outputs.elixir-version }}-rust-${{ env.RUST_VERSION }}-${{ hashFiles('mix.lock') }}
      - name: Generate main openapi.json
        run: |
          mix openapi.spec.json --start-app=false --spec WandaWeb.Schemas.${{ matrix.version }}.ApiSpec /tmp/specs/main-spec.json
      - name: Locate generated specs
        run: mv /tmp/specs .
      - name: Find difference between OpenAPI specifications
        run: |
          docker run -v "$(pwd)/specs:/specs" --rm openapitools/openapi-diff:2.0.1 \
            /specs/main-spec.json \
            /specs/current-spec.json \
            --fail-on-incompatible \
            --markdown /specs/changes.md \
            --json /specs/changes.json \
            --text /specs/changes.txt \
            --html /specs/changes.html
      - name: Upload OpenAPI diff report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: openapi-diff-report-${{ matrix.version }}
          path: specs/

  build-containers:
    name: Build containers
    needs:
      - static-code-analysis
      - test
    if: (github.event_name == 'push' && github.ref_name == 'main') || github.event_name == 'workflow_dispatch'
    uses: trento-project/web/.github/workflows/build-containers.yaml@main
    strategy:
      matrix:
        include:
          - MIX_ENV: prod
            tag: "${{ (github.event_name == 'push' && github.ref_name == 'main' && 'rolling') || github.sha }}"
          - MIX_ENV: demo
            tag: demo
    with:
      image_name: trento-wanda
      MIX_ENV: ${{ matrix.MIX_ENV }}
      tag: ${{ matrix.tag }}

  deploy-demo:
    runs-on: ubuntu-24.04
    if: vars.DEPLOY_DEMO == 'true'
    needs:
      - build-containers
    steps:
      - name: Remotely trigger trento-web demo deployment
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.WEB_REPO_DISPATCH_PAT }}
          repository: ${{ github.repository_owner }}/${{ vars.DEMO_TRIGGER_TARGET || 'web' }}
          event-type: deploy-demo

  generate-docs:
    name: Generate project documentation
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' && github.ref_name == 'main'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        id: setup-elixir
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict
      - name: Read .tool-versions
        uses: endorama/asdf-parse-tool-versions@v1
        id: tool-versions
      - name: Retrieve Cached Dependencies
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: |
            deps
            _build/test
            priv/plts
          key: erlang-${{ steps.setup-elixir.outputs.otp-version }}-elixir-${{ steps.setup-elixir.outputs.elixir-version }}-rust-${{ env.RUST_VERSION }}-${{ hashFiles('mix.lock') }}
      - name: Build docs
        uses: lee-dohm/generate-elixir-docs@v1
      - name: Generate openapi.json
        run: mix openapi.spec.json --start-app=false --spec WandaWeb.Schemas.V1.ApiSpec
      - name: Generate Swagger UI
        uses: Legion2/swagger-ui-action@v1
        with:
          output: ./doc/swaggerui
          spec-file: openapi.json
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./doc

  obs-sync:
    name: OBS sync
    if: vars.OBS_ENABLED == 'true' && (github.event_name == 'push' && github.ref_name == 'main') || github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/obs.yaml
    needs:
      - static-code-analysis
      - test
    secrets: inherit
    with:
      obs_project: ${{ vars.OBS_PROJECT_ROLLING }}
